/*
    Elements: Page
    ---
    Default markup for page level elements
*/

// CSS vars

:root {
    --color-alpha: #{$color-alpha};
    --hue-alpha: #{hue($color-alpha)};
    --saturation-alpha: #{saturation($color-alpha)};
    --lightness-alpha: #{lightness($color-alpha)};

    --color-beta: #{$color-beta};
    --hue-beta: #{hue($color-beta)};
    --saturation-beta: #{saturation($color-beta)};
    --lightness-beta: #{lightness($color-beta)};

    --color-gamma: #{$color-gamma};
    --hue-gamma: #{hue($color-gamma)};
    --saturation-gamma: #{saturation($color-gamma)};
    --lightness-gamma: #{lightness($color-gamma)};

    --color-neutral-xxxxx-light: hsla(var(--hue-alpha), 2.5%, 97%, 1);
    --color-neutral-xxxx-light: hsla(var(--hue-alpha), 2.5%, 95%, 1);
    --color-neutral-xxx-light: hsla(var(--hue-alpha), 2.5%, 92.5%, 1);
    --color-neutral-xx-light: hsla(var(--hue-alpha), 2.5%, 85%, 1);
    --color-neutral-x-light: hsla(var(--hue-alpha), 2.5%, 75%, 1);
    --color-neutral-light: hsla(var(--hue-alpha), 2.5%, 62.5%, 1);
    --color-neutral: hsla(var(--hue-alpha), 2.5%, 50%, 1);
    --color-neutral-dark: hsla(var(--hue-alpha), 5%, 35%, 1);
    --color-neutral-x-dark: hsla(var(--hue-alpha), 7.5%, 25%, 1);
    --color-neutral-xx-dark: hsla(var(--hue-alpha), 7.5%, 15%, 1);
    --color-neutral-xxx-dark: hsla(var(--hue-alpha), 10%, 10%, 1);
    --color-neutral-xxxx-dark: hsla(var(--hue-alpha), 15%, 5%, 1);

    --root-font-size: #{$root-font-size};
    --root-font-size-small: #{round($root-font-size-small)};
}

@mixin light-scheme {
    --html-background-color: hsla(var(--hue-alpha), 2.5%, 100%, .95);
    --page-background-color: var(--html-background-color);
    --page-header-background-color: var(--html-background-color);
    --page-header-border-color: hsla(var(--hue-alpha), 15%, 5%, .075);
    --page-heading-color: var(--color-neutral-xxx-dark);
    --page-text-color: var(--color-neutral-dark);
    // --page-link-color: var(--color-alpha);
    --page-link-color: var(--page-heading-color);
    --page-meta-color: var(--color-neutral);
    --page-selection-color: var(--color-alpha);
    --scrollbar-track-color: var(--page-background-color);
    --scrollbar-thumb-color: var(--color-alpha);
    // --cover-background-color: var(--color-neutral-xxx-dark);
    --cover-background-color: var(--color-alpha);
    --prism-text-color: var(--color-neutral-xx-light);
    --prism-comment-color: var(--color-neutral-light);
    --prism-background-color: var(--color-neutral-xxx-dark);
    --prism-scroll-thumb-color: var(--color-neutral-dark);
    --prism-keyword-color: var(--color-beta);
    --prism-function-color: var(--color-alpha);
    --prism-variable-color: var(--color-gamma);
    --prism-selector-color: var(--color-gamma);
    --prism-property-color: var(--prism-text-color);
    --example-background-color: var(--color-neutral-xxxxx-light);
    --baseline-color: hsla(var(--hue-gamma), var(--saturation-gamma), var(--lightness-gamma), .50);
    --baseline-background: hsla(var(--hue-gamma), var(--saturation-gamma), var(--lightness-gamma), .25);
    --toggle-background-color: var(--color-neutral-xx-light);
    --toggle-background-color-checked: var(--color-alpha);
    --toggle-border-color: var(--toggle-background-color);
    --toggle-border-color-checked: var(--toggle-background-color-checked);
    --toggle-switch-border-color-checked: hsl(var(--hue-alpha),var(--saturation-alpha),var(--lightness-alpha));
    --toggle-switch-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);
    --toggle-switch-shadow-checked: 0 1px 3px rgba(0, 0, 0, 0.2), 0 0 0 3px hsla(var(--hue-alpha),var(--saturation-alpha),var(--lightness-alpha),.25);
    --toggle-label-color: var(--color-neutral);
}

@mixin dark-scheme {
    --html-background-color: hsla(var(--hue-alpha), 15%, 5%, .95);
    --page-header-border-color: hsla(var(--hue-alpha), 2.5%, 95%, .1);
    // --page-header-border-color: transparent;
    --page-heading-color: var(--color-neutral-xxxxx-light);
    --page-text-color: var(--color-neutral-x-light);
    --cover-background-color: var(--prism-background-color);
    --example-background-color: var(--prism-background-color);
    --toggle-background-color: transparent;
    --toggle-border-color: var(--color-neutral);
    --toggle-background-color-checked: var(--toggle-background-color);
    --toggle-border-color-checked: var(--color-alpha);
    --toggle-switch-border-color-checked: white;
    --toggle-switch-shadow-checked: 0 0 0 1px rgba(0,0,0,.25), 0 0 0 4px hsla(var(--hue-alpha),var(--saturation-alpha),var(--lightness-alpha),.75);
}

:root {
    @include light-scheme;
}

.is-inverted {
    @include dark-scheme;
}

@media (prefers-color-scheme: dark) {
    :root {
        @include dark-scheme;
    }

    .is-inverted {
        @include light-scheme;
    }
}

// styles

html {
    font-family: $alpha-font-family;
    font-weight: $alpha-font-weight;
    background-color: var(--html-background-color);
    color: var(--page-text-color);
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    // font-feature-settings: "ss02", "liga", "zero";
    font-feature-settings: "liga", "zero";

    // a little bit of responsive typography

    // font-size: #{$root-font-size-small/16px*100%};

    // @include mq(bp3) {
        font-size: #{$root-font-size/16px*100%};
    // }


}

body {
    position: relative;
    min-height: 100vh;
    background-color: var(--page-background-color);
    @include font-height($root-font-size,$root-baseline-multiplier);
}

::selection {
    background-color: var(--page-selection-color);
    color: white;
    text-shadow: none;
}

// @include scrollbars(baseline(1), var(--scrollbar-thumb-color), var(--scrollbar-track-color));

.c-baseline-overlay {
    display: none;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    height: 100%;
    background: repeating-linear-gradient(
        to bottom,
        transparent,
        transparent pxtorem($baseline * $root-baseline-multiplier - 1),
        var(--baseline-color) pxtorem($baseline * $root-baseline-multiplier)
    );

    background-size: 100% pxtorem($baseline * $root-baseline-multiplier);
    pointer-events: none;
}

.c-baseline-overlay--unit {
    background: repeating-linear-gradient(
        to bottom,
        transparent,
        transparent pxtorem($baseline - 1),
        var(--baseline-color) pxtorem($baseline - 1),
        var(--baseline-color) pxtorem($baseline)
    );

    background-size: 100% pxtorem($baseline);
}
